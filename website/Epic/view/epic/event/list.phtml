<?
$title = 'Events List';
$title = $this->_($title);
$this->headTitle($title, 'SET');
$items = $this->items;

$eventSearchForm = $this->form ? $this->form : new Epic\Form\EventSearchForm();
$eventSearchForm->setView($this)
     ->setMethod('get')
     ->setAction($this->uri('/events/list/'))
     ->prepare();


$calendar = $this->calendar;
$week = $this->week;
$prevPath = $this->prevPath;
$nextPath = $this->nextPath;
$dayPath = $this->dayPath;

$jsEvents = array();
foreach($this->eventList as $eventDay){
    $jsEvents[] = array(
        'id' => $eventDay['id'],
        'title' => $eventDay['title'],
        'start' => $this->DateTime()->jsTime($eventDay['startDay'] . ' ' . $eventDay['startTime']),
        'end' => $this->DateTime()->jsTime($eventDay['endDay'] . ' ' . $eventDay['endTime']),
        //'allDay' => $eventDay['isFullDayEvent'] ? true : false,
        'allDay' => false,
        'url' => $this->uri('/event/' . $eventDay['urlName']),
    );
}
?>

<div class="container">
    <header class="event-header">
    <div class="row">
        <div class="span4">
            <h2><a href="<?=$this->uri('/events/')?>">Event</a></h2>
        </div><!--page main right end-->
        <div class="span8">
            <?=$this->widget('Epic', 'widgets/eventnav', $this->vars())?>
        </div><!--page main left end-->
    </div>
    </header>
</div>
<div class="container">
    <div class="page-bg">
        <div class="row">
            <div class="span4">
                <?=$this->widget('Epic', 'widgets/eventside', $this->vars())?>
            </div><!--page main right end-->
            <div class="span8">
                <div class="event-main">
                    <div id="calendar-day"></div>

                    <div class="search-filter">
                        <form <?=$this->formAttr($eventSearchForm)?> class="form form-inline">
                            <?=$eventSearchForm->helper('keyword', array('class' => 'span2', 'placeholder' => 'Keyword...'))?>
                            <?=$eventSearchForm->helper('city', 'formSelect', array('class' => 'input-medium select2', 'placeholder' => 'City'))?>
                            <?=$eventSearchForm->helper('afterStartDay', array('class' =>'input-small datepicker', 'data-date-format' => 'yyyy-mm-dd', 'placeholder' => 'Start day'))?>
                            <?=$eventSearchForm->helper('beforeStartDay', array('class' => 'input-small datepicker', 'data-date-format' => 'yyyy-mm-dd', 'placeholder' => 'End day'))?>
                            <button class="btn" type="submit"><?=$this->_('Filter Events')?></button>
                        </form>
                    </div>
                    <?=$this->widget('Epic', 'epic/event/list-template', $this->vars())?>

                </div><!--event main end-->
            </div><!--page main left end-->
        </div>
    </div><!-- page-bg end-->
</div><!--container end-->


<script>
eva.ready(function(){
        var viewCalendar = function(){
                var calendar = $('#calendar-day');
                var formatDate = function(input) {
                        function padZeroLeft(s, l) {
                                s = String(s);
                                for (var i = 0; i < l - s.length; i++){
                                        s = '0' + s;
                                }
                                return s;
                        }
                        return input.getFullYear() + '-' + (padZeroLeft(input.getMonth() + 1, 2)) + '-' + padZeroLeft(input.getDate(), 2);
                };
                var initEvents = <?=\Zend\Json\Json::encode($jsEvents)?>;
                var inited = false;
                var options = {
                        header: {
                                left: 'prev',
                                center: 'title',
                                right: 'next'
                        },
                        editable: false,
                        defaultView : 'month',
                        events: function(start, end, callback) {
                                if(!inited){
                                    inited = true;
                                    return callback(initEvents);
                                }
                                $.ajax({
                                        url: '/data/event',
                                        dataType: 'json',
                                        data: {
                                                afterStartDay: formatDate(start),
                                                beforeStartDay: formatDate(end)
                                        },
                                        success: function(data) {
                                                var items = data.items;
                                                var events = [];
                                                for(var i in items){
                                                    var item = items[i];
                                                    events.push({
                                                            id : item.id,
                                                            title : item.title,
                                                            start : item.startDay + ' ' + item.startTime,
                                                            end : item.endDay + ' ' + item.endTime,
                                                            //allDay : item.isFullDayEvent == '1' ? true : false,
                                                            allDay : false,
                                                            url : eva.d('/event/' + item.urlName)
                                                    });
                                                }
                                                callback(events);
                                        }
                                });
                        }
                    };

                calendar.fullCalendar(options);
                calendar.hide();
                $(".nav-week li a").on('click', function(){
                        var handler = $(this);
                        var index = handler.parent().index();
                        if(handler.hasClass('onShow')) {
                                calendar.fadeOut();
                                $(".event-thumbnails").fadeIn();
                        } else {
                                calendar.show();
                                if(index == 7){
                                        calendar.fullCalendar( 'changeView', 'month' );
                                } else {
                                        calendar.fullCalendar( 'changeView', 'agendaDay' );
                                        var gotoDate = new Date(Date.parse(handler.attr('data-date')));
                                        calendar.fullCalendar( 'gotoDate', gotoDate.getFullYear(), gotoDate.getMonth(), gotoDate.getDate() );
                                }
                                calendar.hide();
                                calendar.fadeIn();
                                $(".event-thumbnails").fadeOut();
                        }
                        $(".nav-week li:not(:eq(" + index + ")) a").removeClass('onShow');
                        handler.toggleClass('onShow');

                        return false;
                });
        };
        eva.loadcss(eva.s('/lib/js/jquery/fullcalendar/fullcalendar.css'));
        eva.loader(eva.s([
        '/lib/js/jquery/fullcalendar/fullcalendar.js',
        '/lib/js/moment/moment.js'
        ]), viewCalendar);

});
</script>
