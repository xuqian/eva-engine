<?
$item = $this->item;
$title = $item['id'] ? 'Edit Group' : 'Create Group';
$title = $this->_($title);
$method = $item['id'] ? 'put' : 'post';
$this->headTitle($title, 'SET');

if($this->form){
	$form = $this->form;
} else {
    if($item['id']) {
        $form = new Epic\Form\GroupEditForm();
        $form->setAction($this->uri('/group/edit/'));

    } else {
        $form = new Epic\Form\GroupCreateForm();
        $form->setAction($this->uri('/group/create/'));
    }
}
$form->useSubFormGroup()
     ->setMethod($item['id'] ? 'put' : 'post')
     ->setView($this)
     ->bind($item)
     ->prepare();

?>

<div class="container">
    <div class="normal-page">
        <div class="body grid-s5m0">

            <div class="main-wrap"><div id="main" class="main">
                    <div class="page-main">
                        <div class="row">
                            <div class="span6">
                                <div class="page-main-header">
                                    <a href="<?=$this->uri('/group/create/')?>" class="btn btn-small btn-orange pull-right"><i class="icon-pencil"></i> Write New</a>
                                    <h3><?=$this->_($title)?></h3>
                                </div>
                                <div class="blog-list vlist">
                                    <form <?=$this->formAttr($form)?> class="form">
                                        <?=$form->restful();?>
                                        <?=$form->helper('id');?>

                                        <fieldset class="">
                                            <div class="control-group <?=$form->isError('groupName') ? 'error' : '';?>">
                                                <?=$form->helper('groupName', 'label', array('class' => 'control-label'))?>
                                                <div class="controls docs-input-sizes">
                                                    <?=$form->helper('groupName', array('class' => 'span6'))?>
                                                    <div class="help-block"><?=$form->helper('groupName', 'formElementErrors')?></div>
                                                </div>
                                            </div>
                                            
                                            <div class="control-group <?=$form->isError('summary') ? 'error' : '';?>">
                                                <?=$form->helper('summary', 'label', array('class' => 'control-label'))?>
                                                <div class="controls">
                                                    <?=$form->helper('summary', array('class' => 'span3'))?>        
                                                    <div class="help-block"><?=$form->helper('summary', 'formElementErrors')?></div>
                                                </div>
                                            </div> 
                                        </fieldset>

                                        <fieldset class="">
                                            <div class="control-group <?=$form->isError(array('Text', 'content')) ? 'error' : '';?>">
                                                <div id="editor-left" class="controls">
                                                    <?=$form->helper(array('Text', 'content'), 'formTextarea', array('class' => 'span6', 'rows' => '15',))?>
                                                </div>
                                                <div id="editor-right" class="markdown-preview"></div>
                                                <div class="help-block"><?=$form->helper(array('Text', 'content'), 'formElementErrors')?></div>

                                            </div>
                                        </fieldset>
                                        
                                        <div class="form-actions">
                                            <button type="submit" class="btn btn-info btn-large"><?=$this->_('Publish');?></button>
                                        </div>
                                    </form>
                                </div><!--main form end-->
                                <?if($this->paginator):?>
                                <?=$this->paginator->setPath('/my/blog/')->setBaseQuery($this->query);?>
                                <?=$this->widget('Core', 'widgets/paginator', $this->vars())?>
                                <?endif;?>

                            </div><!--page main left end-->
                            <div class="span3">
                                <div class="page-extra">
                                    <?=$this->widget('Epic', 'widgets/userextra')?>
                                </div>
                            </div><!--page main right end-->
                        </div>

                    </div><!--page-main end-->
            </div></div><!-- #main end-->

            <div class="sidebar">
                <div class="page-side">
                    <?=$this->widget('Epic', 'widgets/userside', $this->vars())?>
                </div>
            </div><!--sider end-->

        </div><!-- #body end-->
    </div><!-- normal end-->
</div><!--container end-->

<script>
eva.runtime = function(){
      
    eva.callback.connect = function(item, parentWindow){
        $("#file-form-fileconnectform-file-id").val(item.attr("data-connect-id"));
        var data = $.parseJSON(item.attr('data-connect-json'));
        $("#post-image").attr("src", data.Thumb);
        $.fn.colorbox.close();
    }
    eva.loadcss(eva.s('/lib/js/jquery/colorbox/colorbox.css'));
    eva.loader(eva.s('/lib/js/jquery/colorbox/jquery.colorbox.js'), function(){
        $("#connect-image").colorbox({
            iframe:true,
                width:"80%",
                height:"80%"
        });
    });


    $("#save-draft").on('click', function(){
        $("#blog-form-posteditform-status").val('draft');
    });

    var editor = $("#blog-form-textform-content");

    var editorMd;
    var mdInited = false;
    var initMd = function(_editor){
        if(true === mdInited) {
            return;
        }
        eva.loadcss(eva.s(['/lib/js/codemirror/lib/codemirror.css', '/lib/js/codemirror/theme/ambiance.css']));
        eva.loader(eva.s(['/lib/js/codemirror/lib/codemirror.js', '/lib/js/codemirror/mode/xml/xml.js', '/lib/js/codemirror/mode/markdown/markdown.js', '/lib/js/showdown/showdown.js']), function(){
            mdInited = true;
            builtMdEditor(_editor);
        });
    }
    var builtMdEditor = function(_editor){
        if(!mdInited){
            initMd(_editor); 
            return;
        }
        editorMd = CodeMirror.fromTextArea(_editor[0], {
            "mode":"markdown",
                "theme":"ambiance",
                "lineNumbers":true,
                "lineWrapping":true,
                onChange : function(){
                }
        });	
    }
    var removeMdEditor = function(){
        if(!editorMd){
                return;
            }
            editorMd.toTextArea();
    }


    var editorHtml;
    var htmlInited = false;
    var initHtml = function(_editor){
            if(true === htmlInited) {
                return;
            }
            eva.loader(eva.s(["/lib/js/tiny_mce/jquery.tinymce.js"]), function(){
                    htmlInited = true;
                    builtHtmlEditor(_editor);
            });
    }
    var builtHtmlEditor = function(_editor){
            if(!htmlInited){
                    initHtml(_editor); 
                    return;
            }

			var mceGlobelConfig = {
				mode : "textareas",
				theme : "advanced",
				plugins : "autolink,lists,spellchecker,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

				// Theme options
                theme_advanced_buttons1 : "bold,italic,underline,separator,strikethrough,justifyleft,justifycenter,justifyright, justifyfull,bullist,numlist,undo,redo,link,unlink",
                theme_advanced_buttons2 : "formatselect,fontselect,fontsizeselect,|,forecolor,backcolor,image,media",
                theme_advanced_buttons3 : "",
				theme_advanced_toolbar_location : "top",
				theme_advanced_toolbar_align : "left",
				theme_advanced_statusbar_location : "bottom",
				theme_advanced_resizing : true,
				
				remove_linebreaks : false,
				extended_valid_elements : "pre[cols|rows|disabled|name|readonly|class]",
				script_url : eva.s('/lib/js/tiny_mce/tiny_mce.js'),
				
				content_css: eva.s("/lib/css/typo/typo.min.css"),
				spellchecker_rpc_url : eva.s('/lib/js/tiny_mce/plugins/spellchecker/rpc.php')
			};

            var mceconfig = mceGlobelConfig;
            editorHtml = _editor.tinymce(mceconfig);
    }

    var removeHtmlEditor = function(_editor){
            if(!editorHtml){
                return;
            }
            tinyMCE.execCommand('mceToggleEditor', false, _editor.attr('id'));
    }

    var switchEditor = function(){
            var codeType = $("input[name='codeType']:checked").val();
            if(codeType == 'markdown'){
                    removeHtmlEditor(editor);
                    builtMdEditor(editor); 
            } else if(codeType == 'html'){
                    removeMdEditor(editor);
                    builtHtmlEditor(editor);
            }
    }
    switchEditor();
    $("input[name='codeType']").on("change", function(){
            if(confirm('Text format will not be keep, are you sure ?')){
                switchEditor(); 
            }
    });
}
</script>
