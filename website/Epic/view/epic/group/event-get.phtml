<?
$title = 'Groups';
$this->headTitle($title, 'SET');
$user = $this->user;
$item = $this->event;

$form = new Activity\Form\MessageCreateForm();
$form->useSubFormGroup()
     ->setMethod('post')
     ->setView($this)
     ->setAction($this->uri('/event/feed/'))
     ->prepare();

$joinForm = new Event\Form\EventUserForm();
$joinForm
->setView($this)
->setMethod('post')
->setAction($this->uri('/event/join/'))
->prepare();

$unjoinForm = clone $joinForm;
$unjoinForm->setMethod('delete');
?>

<div class="container">
    <header class="group-header">
        <?=$this->widget('Epic', 'widgets/groupnav', $this->vars())?> 
    </header>
</div>

<div class="container">
    <div class="page-bg">
        <div class="row">

            <div class="span8">
                <div class="group-main">

                    <?=$this->widget('Epic', 'widgets/groupcard', $this->vars())?>  

                 <div class="event-detail media">
                        <a class="pull-left" href="<?=$this->uri('/event/' . $item['urlName']);?>">
                            <?if($item['File']):?>
                                <img class="media-object" src="<?=$this->thumb($item['File'][0]['Thumb'], array('c_fill', 'h_240', 'w_240'))?>" width="240" />
                             <?else:?>
                                 <img class="media-object" src="<?=$this->assets('/module/epic/img/event-default-l.jpg')?>" width="240" />
                            <?endif?>
                        </a>
                        <div class="media-body">
                            <h4 class="media-heading"><a href="<?=$this->uri('/event/' . $item['urlName']);?>"><?=$item['title'];?></a></h4>
                            <div class="media typo">
                                <dl class="dl-horizontal">
                                    <dt>Start Time:</dt>
                                    <dd><?=$item['startDay']?> <?=$item['startTime'] ? $item['startTime'] : null?></dd>
                                    <dt>End Time:</dt>
                                    <dd><?=$item['endDay']?> <?=$item['endTime'] ? $item['endTime'] : null?></dd>
                                    <dt>City:</dt>
                                    <dd><?=$item['city']?></dd>
                                    <dt>Location:</dt>
                                    <dd><?=$item['location']?></dd>
                                    <dt>Event Owner</dt>
                                    <dd><?=$item['user_name']?></dd>
                                    <dd></dd>
                                </dl>
                                <p><span class="highlight"><?=$item['Count']['memberCount']?></span> Members Joined</p>
                                <p>
                                <?if(isset($item['Join']) && $item['Join']['user_id'] == $item['user_id']):?>
                                <?elseif(isset($item['Join']) && $item['Join'] && $item['Join']['user_id'] != $item['user_id']):?>
                                <form <?=$this->formAttr($unjoinForm)?>>
                                    <?=$unjoinForm->restful();?>
                                    <?=$unjoinForm->helper('event_id', 'formHidden', array('class' => '', 'value' => $item['id']))?>
                                    <?=$unjoinForm->helper('user_id', array('class' => ''))?>
                                    <?=$this->callback()?>
                                    <button class="btn btn-small item-action-main btn btn-orange icon-user"> <?=$this->_('Quit')?></button>
                                </form>
                                <?elseif($item['memberEnable'] && ($item['memberLimit'] > $item['Count']['memberCount'] || $item['memberLimit'] == 0)):?>
                                <form <?=$this->formAttr($joinForm)?>>
                                    <?=$joinForm->restful();?>
                                    <?=$joinForm->helper('event_id', 'formHidden', array('class' => '', 'value' => $item['id']))?>
                                    <?=$joinForm->helper('user_id', array('class' => ''))?>
                                    <?=$this->callback()?>
                                    <button class="btn btn-small item-action-main btn btn-orange icon-user"> <?=$this->_('Join Now')?></button>
                                </form>
                                <?endif?> 
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="page-header border-header">
                        <h3>Event Members</h3>
                    </div>

                    <div class="side-user-list">
                        <ul class="thumbnails">
                            <?if($this->eventMembers):?>
                            <?foreach($this->eventMembers as $member):?>
                            <li>
                            <a class="thumbnail" href="<?=$this->uri('/user/' . $member['User']['userName'])?>">
                                <img alt="userface" src="<?=$this->gravatarLink($member['User']['email'], 30)?>" width="30" height="30"/>
                            </a>
                            </li>
                            <?endforeach;?>
                            <?endif;?>
                        </ul>
                    </div>

                    <div class="page-header border-header">
                        <h3>Event Description</h3>
                    </div>


                    <article class="typo typocn">
                    <?=$item['Text']['content']?>
                    </article>

                    <div class="page-header border-header">
                        <small class="pull-right"><a href="" class="btn btn-small btn-gray"><i class="icon-plus"></i>Add image</a></small>
                        <h3>Event Images</h3>
                    </div>


                    <div>
                        <ul class="thumbnails">
                            <?for($i=0;$i<8;$i++):?>
                            <li class="thumbnail"><a href="#"><img src="https://lh4.googleusercontent.com/-24AS3_MK3m0/UKLldhEDMoI/AAAAAAAARCM/u_zXkKeb9vo/s144-p/DSC_0065.jpg" alt=""></a></li>
                            <?endfor?>
                        </ul>
                    </div>

                    <div class="page-header border-header">
                        <h3>Event Talking</h3>
                    </div>


                    <div class="event-activities">
                        <div class="row">
                            <form id="activity-form" <?=$this->formAttr($form)?> class="activity-box span7">
                                <?=$form->helper('messageType', 'formHidden', array('class' => ''))?>        
                                <?=$form->helper('reference_id', array('class' => ''))?>
                                <?=$form->helper(array('MessageFile', 'file_id'), 'formHidden', array('class' => ''))?>
                                <input type="hidden" name="event_id" value="<?=$item['id']?>"> 
                                <?=$this->callback()?>
                                <fieldset class="form">
                                    <div class="activity-box-wrap">
                                        <div class="activity-box-content">
                                            <?=$form->helper('content', 'formTextarea', array('class' => '', 'rows' => 5, 'value' => 'From Event :' . $this->serverUrl() . '/event/' . $item['urlName']))?>        
                                        </div>
                                        <div class="activity-box-buttons">
                                            <a id="activity-box-image-button" class="activity-box-func activity-box-text" href="javascript:;" data-activity-text="Share Photo."><i class="icon-mini icon-picture"></i> Photo</a>
                                            <a id="activity-box-video-button" class="activity-box-func" href="javascript:;" data-placement="bottom" rel="popover"><i class="icon-mini icon-facetime-video"></i> Video</a>
                                            <label id="activity-box-sync-twitter" class="activity-box-func" title="Sync to Twitter"><i class="icon-mini icon-twitter"></i><input type="checkbox" /></label>
                                            There are <span class="highlight highlight-large activity-box-count">140</span> letters left <button type="submit" class="btn btn-light-brown btn-large">Submit</button>
                                        </div>
                                    </div>
                                </fieldset>
                            </form>
                        </div>

                        <div class="activity-list vlist">
                            <?foreach($items as $item):?>
                            <div class="item">
                                <a href="<?=$this->uri('/user/' . $item['User']['userName'])?>" title="" class="item-absolute item-userface"><img src="<?=$this->gravatarLink($item['User']['email'])?>" alt="" class="img-rounded" width="60" height="60" /></a>
                                <div class="item-inline item-text span6">
                                    <div class="item-content">
                                        <div class="item-title"><a href="<?=$this->uri('/user/' . $item['User']['userName'])?>" class="item-user"><?=$item['User']['userName']?></a> Said:</div>
                                        <p><?=$item['ContentHtml']?></p>
                                        <?if($item['File']):?>
                                        <div class="item-image">
                                            <p><a href="<?=$item['File'][0]['Thumb']?>" class="item-preview image" data-preview-type="image" data-url="<?=$this->thumb($item['File'][0]['Thumb'], array('w_400'))?>" data-width="400"><img src="<?=$this->thumb($item['File'][0]['Thumb'], array('w_200'))?>" alt="" class="img-polaroid" /></a></p>
                                        </div>
                                        <?endif?>

                                        <?if($item['Video']):$video = $item['Video'];?>
                                        <div class="item-video">
                                            <?if($video['thumbnail']):?>
                                            <a href="<?=$video['url']?>" class="item-preview video" data-preview-type="video" data-url="<?=$video['swf']?>" data-width="<?=$video['width']?>" data-height="<?=$video['height']?>"><img src="<?=$video['thumbnail']?>" alt="video preview" class="img-polaroid" width="200" /><i class="icon-play btn-play"></i></a>
                                            <?else:?>
                                            <a href="<?=$video['url']?>" class="item-preview video" data-preview-type="video" data-url="<?=$video['swf']?>" data-width="<?=$video['width']?>" data-height="<?=$video['height']?>"><div class="video-no-preview"></div><i class="icon-play btn-play"></i></a>
                                            <?endif?>
                                        </div>
                                        <?endif?>

                                        <?if(isset($item['ForwardActivity']) && $item['ForwardActivity']): $subItem = $item['ForwardActivity'];?>
                                        <div class="well">
                                            <p><?=$subItem['ContentHtml']?></p>
                                            <?if($subItem['File']):?>
                                            <div class="item-image">
                                                <p><a href="<?=$subItem['File'][0]['Thumb']?>"><img src="<?=$this->thumb($subItem['File'][0]['Thumb'], array('w_200'))?>" alt="" class="img-polaroid" /></a></p>
                                            </div>
                                            <?endif?>
                                            <div class="item-action">
                                                <p class="pull-right"><a href="<?=$this->uri('/feed/' . $subItem['messageHash'])?>" class="" data-activity-comment="<?=$subItem['id']?>"><i class="icon-comment"></i> Comments (<span class="highlight"><?=$subItem['commentedCount']?></span>)</a></p>
                                                <p class="pull-left">
                                                <a href="<?=$this->uri('/feed/' . $subItem['messageHash'])?>"><time class="agotime" data-jstime="<?=$this->datetime()->jsTime($subItem['createTime'])?>" datetime="<?=$this->datetime()->isoTime($subItem['createTime'])?>"><?=$this->datetime($subItem['createTime'])?></time></a>
                                                </p>
                                            </div>
                                        </div>
                                        <?endif?>

                                        <div class="item-action">
                                            <p class="pull-right">
                                            <a href="javascript:;" class="item-func remove <?=$viewAsGuest ? 'hide' : ''?>"><i class="icon-remove"></i> Delete</a>
                                            <a href="javascript:;" class="item-func comment" data-activity-comment="<?=$item['id']?>"><i class="icon-comment"></i> Comments (<span class="highlight"><?=$item['commentedCount']?></span>)</a>
                                            </p>
                                            <p class="pull-right hide"><a href="#activity-form" class="item-func reference" data-activity-reference="<?=$item['id']?>" data-activity-text="@<?=$item['User']['userName']?> "><i class="icon-share-alt"></i> RT (<span class="highlight"><?=$item['transferredCount']?></span>)</a></p>
                                            <p class="pull-left">
                                            <a href="<?=$this->uri('/feed/' . $item['messageHash'])?>" class="item-id"><time class="agotime" data-jstime="<?=$this->datetime()->jsTime($item['createTime'])?>" datetime="<?=$this->datetime()->isoTime($item['createTime'])?>"><?=$this->datetime($item['createTime'])?></time></a>
                                            </p>
                                        </div>
                                    </div>

                                    <div class="item-remove-ajax">
                                    </div>
                                    <div class="item-sub-ajax">
                                    </div>
                                </div>
                            </div>
                            <?endforeach?>

                            <?if($this->paginator):?>
                            <?=$this->paginator->setPath('/event/' . $item['urlName'] . '/')->setBaseQuery($this->query);?>
                            <?=$this->widget('Core', 'widgets/paginator', $this->vars())?>
                            <?endif;?>
                        </div><!--activity-list end--> 


                </div><!--group main end-->
            </div><!--page main left end-->
            <div class="span4">
               <?=$this->widget('Epic', 'widgets/groupside', $this->vars())?>  
            </div>

        </div><!--page main right end-->
    </div><!-- page-bg end-->
</div><!--container end-->
<script>
    eva.ready(function(){
            var form = $(".event-create-form");
            var uploader = $('#singlefileupload');
            uploader.bind('fileuploaddone', function (e, data) {
                    var file = data.result[0];
                    form.find('input[name="EventFile[file_id]"]').val(file.id);
            });

            eva.loadcss(eva.s(['/lib/js/jquery/jquery.timepicker/jquery.timepicker.css', '/lib/js/bootstrap/datepicker/datepicker.css']));
            eva.loader(eva.s(['/lib/js/jquery/jquery.timepicker/jquery.timepicker.js', "/lib/js/bootstrap/datepicker/bootstrap-datepicker.js"]), function(){
                    var dateFormat = 'Y-m-d';
                    var timeFormat = 'g:ia';
                    $('.datepair input.date').each(function(){
                            var $this = $(this);
                            $this.datepicker({
                                    'dateFormat': dateFormat,
                                    'autoclose': true
                            });

                            if ($this.hasClass('start') || $this.hasClass('end')) {
                                    $this.on('changeDate change', doDatepair);
                            }

                    });

                    $(".datepair input.date.start").on('change', function(){
                            if($(".datepair input.date.end").val() == ''){
                                    $(".datepair input.date.end").val($(".datepair input.date.start").val());
                            }
                    });

                    $('.datepair input.time').each(function() {
                            var $this = $(this);
                            var opts = { 'showDuration': true, 'timeFormat': timeFormat, 'scrollDefaultNow': true };

                            if ($this.hasClass('start') || $this.hasClass('end')) {
                                    opts.onSelect = doDatepair;
                            }

                            $this.timepicker(opts);
                    });

                    $('.datepair').each(initDatepair);

                    function initDatepair()
                    {
                            var container = $(this);

                            var startDateInput = container.find('input.start.date');
                            var endDateInput = container.find('input.end.date');
                            var dateDelta = 0;

                            if (startDateInput.length && endDateInput.length) {
                                    var startDate = new Date(startDateInput.val());
                                    var endDate =  new Date(endDateInput.val());

                                    dateDelta = endDate.getTime() - startDate.getTime();

                                    container.data('dateDelta', dateDelta);
                            }

                            var startTimeInput = container.find('input.start.time');
                            var endTimeInput = container.find('input.end.time');

                            if (startTimeInput.length && endTimeInput.length) {
                                    var startInt = startTimeInput.timepicker('getSecondsFromMidnight');
                                    var endInt = endTimeInput.timepicker('getSecondsFromMidnight');

                                    container.data('timeDelta', endInt - startInt);

                                    if (dateDelta < 86400000) {
                                            endTimeInput.timepicker('option', 'minTime', startInt);
                                    }
                            }
                    }

                    function doDatepair()
                    {
                            var target = $(this);
                            if (target.val() == '') {
                                    return;
                            }

                            var container = target.closest('.datepair');

                            if (target.hasClass('date')) {
                                    updateDatePair(target, container);

                                } else if (target.hasClass('time')) {
                                    updateTimePair(target, container);
                            }
                    }

                    function updateDatePair(target, container)
                    {
                            var start = container.find('input.start.date');
                            var end = container.find('input.end.date');

                            if (!start.length || !end.length) {
                                    return;
                            }

                            var startDate = new Date(start.val());
                            var endDate =  new Date(end.val());

                            var oldDelta = container.data('dateDelta');

                            if (oldDelta && target.hasClass('start')) {
                                    var newEnd = new Date(startDate.getTime()+oldDelta);
                                    end.val(newEnd.format(dateFormat));
                                    end.datepicker('update');
                                    return;

                                } else {
                                    var newDelta = endDate.getTime() - startDate.getTime();

                                    if (newDelta < 0) {
                                            newDelta = 0;

                                            if (target.hasClass('start')) {
                                                    end.val(startDate.format(dateFormat));
                                                    end.datepicker('update');
                                                } else if (target.hasClass('end')) {
                                                    start.val(endDate.format(dateFormat));
                                                    start.datepicker('update');
                                            }
                                    }

                                    if (newDelta < 86400000) {
                                            var startTimeVal = container.find('input.start.time').val();

                                            if (startTimeVal) {
                                                    container.find('input.end.time').timepicker('option', {'minTime': startTimeVal});
                                            }
                                        } else {
                                            container.find('input.end.time').timepicker('option', {'minTime': null});
                                    }

                                    container.data('dateDelta', newDelta);
                            }
                    }

                    function updateTimePair(target, container)
                    {
                            var start = container.find('input.start.time');
                            var end = container.find('input.end.time');

                            if (!start.length || !end.length) {
                                    return;
                            }

                            var startInt = start.timepicker('getSecondsFromMidnight');
                            var endInt = end.timepicker('getSecondsFromMidnight');

                            var oldDelta = container.data('timeDelta');
                            var dateDelta = container.data('dateDelta');

                            if (target.hasClass('start') && (!dateDelta || dateDelta < 86400000)) {
                                    end.timepicker('option', 'minTime', startInt);
                            }

                            var endDateAdvance = 0;
                            var newDelta;

                            if (oldDelta && target.hasClass('start')) {
                                    // lock the duration and advance the end time

                                    var newEnd = (startInt+oldDelta)%86400;

                                    if (newEnd < 0) {
                                            newEnd += 86400;
                                    }

                                    end.timepicker('setTime', newEnd);
                                    newDelta = newEnd - startInt;
                                } else if (startInt !== null && endInt !== null) {
                                    newDelta = endInt - startInt;
                                } else {
                                    return;
                            }

                            container.data('timeDelta', newDelta);

                            if (newDelta < 0 && (!oldDelta || oldDelta > 0)) {
                                    // overnight time span. advance the end date 1 day
                                    var endDateAdvance = 86400000;

                                } else if (newDelta > 0 && oldDelta < 0) {
                                    // switching from overnight to same-day time span. decrease the end date 1 day
                                    var endDateAdvance = -86400000;
                            }

                            var startInput = container.find('.start.date');
                            var endInput = container.find('.end.date');

                            if (startInput.val() && !endInput.val()) {
                                    endInput.val(startInput.val());
                                    endInput.datepicker('update');
                                    dateDelta = 0;
                                    container.data('dateDelta', 0);
                            }

                            if (endDateAdvance != 0) {
                                    if (dateDelta || dateDelta === 0) {
                                            var endDate =  new Date(endInput.val());
                                            var newEnd = new Date(endDate.getTime() + endDateAdvance);
                                            endInput.val(newEnd.format(dateFormat));
                                            endInput.datepicker('update');
                                            container.data('dateDelta', dateDelta + endDateAdvance);
                                    }
                            }
                    }
            });
    });
    Date.prototype.format=function(format){var returnStr='';var replace=Date.replaceChars;for(var i=0;i<format.length;i++){var curChar=format.charAt(i);if(replace[curChar]){returnStr+=replace[curChar].call(this);}else{returnStr+=curChar;}}return returnStr;};Date.replaceChars={shortMonths:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],longMonths:['January','February','March','April','May','June','July','August','September','October','November','December'],shortDays:['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],longDays:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],d:function(){return(this.getDate()<10?'0':'')+this.getDate();},D:function(){return Date.replaceChars.shortDays[this.getDay()];},j:function(){return this.getDate();},l:function(){return Date.replaceChars.longDays[this.getDay()];},N:function(){return this.getDay()+1;},S:function(){return(this.getDate()%10==1&&this.getDate()!=11?'st':(this.getDate()%10==2&&this.getDate()!=12?'nd':(this.getDate()%10==3&&this.getDate()!=13?'rd':'th')));},w:function(){return this.getDay();},z:function(){return"Not Yet Supported";},W:function(){return"Not Yet Supported";},F:function(){return Date.replaceChars.longMonths[this.getMonth()];},m:function(){return(this.getMonth()<9?'0':'')+(this.getMonth()+1);},M:function(){return Date.replaceChars.shortMonths[this.getMonth()];},n:function(){return this.getMonth()+1;},t:function(){return"Not Yet Supported";},L:function(){return(((this.getFullYear()%4==0)&&(this.getFullYear()%100!=0))||(this.getFullYear()%400==0))?'1':'0';},o:function(){return"Not Supported";},Y:function(){return this.getFullYear();},y:function(){return(''+this.getFullYear()).substr(2);},a:function(){return this.getHours()<12?'am':'pm';},A:function(){return this.getHours()<12?'AM':'PM';},B:function(){return"Not Yet Supported";},g:function(){return this.getHours()%12||12;},G:function(){return this.getHours();},h:function(){return((this.getHours()%12||12)<10?'0':'')+(this.getHours()%12||12);},H:function(){return(this.getHours()<10?'0':'')+this.getHours();},i:function(){return(this.getMinutes()<10?'0':'')+this.getMinutes();},s:function(){return(this.getSeconds()<10?'0':'')+this.getSeconds();},e:function(){return"Not Yet Supported";},I:function(){return"Not Supported";},O:function(){return(-this.getTimezoneOffset()<0?'-':'+')+(Math.abs(this.getTimezoneOffset()/60)<10?'0':'')+(Math.abs(this.getTimezoneOffset()/60))+'00';},P:function(){return(-this.getTimezoneOffset()<0?'-':'+')+(Math.abs(this.getTimezoneOffset()/60)<10?'0':'')+(Math.abs(this.getTimezoneOffset()/60))+':'+(Math.abs(this.getTimezoneOffset()%60)<10?'0':'')+(Math.abs(this.getTimezoneOffset()%60));},T:function(){var m=this.getMonth();this.setMonth(0);var result=this.toTimeString().replace(/^.+ \(?([^\)]+)\)?$/,'$1');this.setMonth(m);return result;},Z:function(){return-this.getTimezoneOffset()*60;},c:function(){return this.format("Y-m-d")+"T"+this.format("H:i:sP");},r:function(){return this.toString();},U:function(){return this.getTime()/1000;}};
</script>
